<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    	xmlns:context="http://www.springframework.org/schema/context"
		xmlns:int="http://www.springframework.org/schema/integration"
        xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
		xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
		xmlns:task="http://www.springframework.org/schema/task" 
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
							http://www.springframework.org/schema/context
	    					http://www.springframework.org/schema/context/spring-context-3.1.xsd
							http://www.springframework.org/schema/task 
							http://www.springframework.org/schema/task/spring-task-3.1.xsd
	                        http://www.springframework.org/schema/util
        					http://www.springframework.org/schema/util/spring-util-3.1.xsd
        					http://www.springframework.org/schema/integration
							http://www.springframework.org/schema/integration/spring-integration-2.1.xsd
        					http://www.springframework.org/schema/integration/jms
        					http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.1.xsd
							http://www.springframework.org/schema/integration/ws
        					http://www.springframework.org/schema/integration/ws/spring-integration-ws-2.1.xsd">
	
    <context:component-scan base-package="org.jboss.windup.tests.example" />

	<import resource="classpath:spring-example.xml" />
	<import resource="classpath:spring-example-2.xml" />
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:deployment.properties"/>
	</bean>

	<bean id="exampleBean" class="org.apache.commons.configuration.XMLConfiguration">
		<constructor-arg type="java.lang.String" value="profile/constructor-arg.xml" />
		<property name="reloadingStrategy" ref="reloadingStrategy" />
	</bean>
	
	<config:manager id="configuration" source="xmlConfiguration" />


	<bean id="exampleBean2" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory">
		<property name="beanPropertyName">
			<bean class="com.sun.xml.messaging.saaj.soap.ver1_1.SOAPMessageFactory1_1Impl">
			</bean>
		</property>
	</bean>
	
	<bean id="exampleBean3" class="org.jboss.windup.tests.example.Bean3">
		<property name="beanPropertyName2">
			<list>

				<value>org.jboss.windup.tests.schema</value>
			</list>
		</property>
		<property name="beanPropertyName3">
			<map>
				<entry>
					<key><util:constant static-field="javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT" /></key>
					<value type="java.lang.Boolean">true</value>
				</entry>
				<entry>
					<key><util:constant static-field="javax.xml.bind.Marshaller.JAXB_ENCODING" /></key>
					<value>UTF-8</value>
				</entry>
			</map>
		</property>
	</bean>
	
	<task:scheduled-tasks scheduler="taskScheduler">
		<task:scheduled ref="scheduledReference" method="scheduledMethod" fixed-rate="600000" />
    </task:scheduled-tasks>
	
    <task:scheduler id="schedulerId" pool-size="1" />

	
	<int:channel id="channel-id-4" />
	<int:channel id="channel-id-5" />
 
	<int-jms:message-driven-channel-adapter id="messageDrivenChannelAdapterId" 
							destination="messageDrivenChannelAdapterDestination" 
							channel="message-driven-channel-adapter-channel" />

	<int:service-activator input-channel="service-activator-input-channel"
							output-channel="service-activator-output-channel" 
							ref="serviceActivatorReference2" 
							method="onMessageReceived" />
							
	<int-jms:outbound-channel-adapter id="outboundChannelAdapterId"
							destination="outboundChannelAdapterDestination" 
							channel="outbound-channel" />
	
	
	<int:channel id="channel-id-6"/>
	<int:channel id="channel-id-7"/>

	<int-ws:inbound-gateway id="inbound-gateway-id"
							request-channel="inbound-gateway-request-channel"
							reply-channel="inbound-gateway-request-channel"
							header-mapper="inboundGatewayHeaderMapper"
							marshaller="marshaller"
							unmarshaller="marshaller"/>
							
	<int:mapping type="org.jboss.windup.tests.example.MappingType" channel="mapping-channel"/>
		<int:mapping type="org.jboss.windup.tests.example.MappingType2" channel="search-request-channel-2"/>
		<int:mapping type="org.jboss.windup.tests.example.MappingType3" channel="search-request-channel-3"/>
	</int:payload-type-router>
	
	
	<int:channel id="channel-id">
		<int:queue />
	</int:channel>
	
	<int:service-activator input-channel="service-activator-input-channel-2"
							ref="serviceActivatorReference">
		<int:poller max-messages-per-poll="10" fixed-rate="5000" />
	</int:service-activator>
	
	<int:channel id="channel-id-2">
		<int:interceptors>
			<int:wire-tap channel="channel-id"/>
		</int:interceptors>
	</int:channel>
	
	
	<int:channel id="channel-id-3"
                 datatype="org.jboss.windup.tests.example.ChannelDatatype"/>

	<int:header-value-router input-channel="input-channel" header-name="headerValueName">
		<int:mapping value="Example" channel="example-channel" />
		<int:mapping value="Example2" channel="example-channel-2" />
	</int:header-value-router>
	
	
	<int:chain input-channel="chain-input-channel" output-channel="example-output-channel">
        <int:service-activator ref="chainServiceActivator" method="serviceActivatorMethod"/>
	</int:chain>
	
	<int:recipient-list-router input-channel="recipient-input-channel">
        <int:recipient channel="example-recipient-channel"
                       selector-expression="expression == true"/>
        <int:recipient channel="example-recipient-channel-2"
                       selector-expression="expression2 == true"/>
    </int:recipient-list-router>
	
    <int:splitter input-channel="splitter-input-channel"
                  output-channel="splitter-output-channel"
                  ref="splitterReference"/>
				  
	<int:aggregator input-channel="aggregator-input-channel"
				output-channel="aggregator-output-channel"
				ref="aggregatorReference" />
	
	<int:transformer id="transformer-id" 
					input-channel="transformer-input-channel"
					output-channel="transformer-output-channel"
					ref="transformerReference"
					method="transform"/>
</beans>
